{"version":3,"file":"react-onsenui.js","sources":["../src/components/Util.js","../src/components/BaseDialog.jsx","../src/components/AlertDialog.jsx","../src/components/BasicComponent.jsx","../src/components/SimpleWrapper.jsx","../src/components/BackButton.jsx","../src/components/BottomToolbar.jsx","../src/components/Button.jsx","../src/components/Carousel.jsx","../src/components/CarouselItem.jsx","../src/components/Col.jsx","../src/components/Dialog.jsx","../src/components/Fab.jsx","../src/components/Icon.jsx","../src/components/Input.jsx","../src/components/LazyList.jsx","../src/components/List.jsx","../src/components/ListHeader.jsx","../src/components/ListItem.jsx","../src/components/Navigator.jsx","../src/components/Page.jsx","../src/components/Popover.jsx","../src/components/ProgressBar.jsx","../src/components/ProgressCircular.jsx","../src/components/PullHook.jsx","../src/components/Range.jsx","../src/components/Ripple.jsx","../src/components/Row.jsx","../src/components/SpeedDial.jsx","../src/components/SpeedDialItem.jsx","../src/components/Splitter.jsx","../src/components/SplitterContent.jsx","../src/components/SplitterSide.jsx","../src/components/Switch.jsx","../src/components/Tab.jsx","../src/components/TabActive.jsx","../src/components/TabInactive.jsx","../src/components/Tabbar.jsx","../src/components/Toolbar.jsx","../src/components/ToolbarButton.jsx"],"sourcesContent":["export default {\n  sizeConverter(item) {\n    if (typeof (item) === 'number') {\n      return `${item}px`;\n    } else {\n      return item;\n    }\n  },\n\n  numberConverter(item) {\n    return `${item}px`;\n  },\n\n  animationOptionsConverter(options) {\n    var keys = Object.keys(options);\n    var innerString = keys.map((key) => key + ': \"' + options[key] + '\"');\n    return '{' + innerString.join(',') + '}';\n  },\n\n  convert(dict, name, additionalDict = {}) {\n    const fun = additionalDict.fun ? additionalDict.fun : (x) => x;\n    const newName = additionalDict.newName ? additionalDict.newName : name;\n\n    var val = dict[name];\n    if (val) {\n      if (newName !== name) {\n        delete dict[name];\n      }\n      dict[newName] = fun(val);\n    } else {\n      dict[newName] = null;\n    }\n    return dict;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Util from './Util.js';\n\nclass BaseDialog extends React.Component {\n  show() {\n    this.node.firstChild.show();\n  }\n\n  updateClasses() {\n    var node = this.node.firstChild;\n\n    if (this.props.className) {\n      if (this.lastClass) {\n        node.className = node.className.replace(this.lastClass, '');\n      }\n\n      this.lastClass = ' ' + this.props.className;\n      node.className += this.lastClass;\n    }\n  }\n\n  hide() {\n    this.node.firstChild.hide();\n  }\n\n  componentDidMount() {\n    this.node = document.createElement('div');\n    document.body.appendChild(this.node);\n\n    this.node.addEventListener('cancel', this.props.onCancel);\n    this.node.addEventListener('preshow', this.props.onPreShow);\n    this.node.addEventListener('postshow', this.props.onPostShow);\n    this.node.addEventListener('prehide', this.props.onPreHide);\n    this.node.addEventListener('posthide', this.props.onPostHide);\n    this.renderPortal(this.props);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.isOpen !== this.props.isOpen) {\n      this.animateShow = true;\n    }\n    this.renderPortal(newProps);\n  }\n\n  componentWillUnmount() {\n    this.node.removeEventListener('cancel', this.props.onCancel);\n    this.node.removeEventListener('preshow', this.props.onPreShow);\n    this.node.removeEventListener('postshow', this.props.onPostShow);\n    this.node.removeEventListener('prehide', this.props.onPreHide);\n    this.node.removeEventListener('posthide', this.props.onPostHide);\n\n    ReactDOM.unmountComponentAtNode(this.node);\n    document.body.removeChild(this.node);\n  }\n\n  _update() {\n    CustomElements.upgrade(this.node.firstChild);\n    if (this.props.isOpen) {\n      if (this.animateShow) {\n        this.show();\n      }\n      this.animateShow = false;\n    } else {\n      this.hide();\n    }\n    this.updateClasses();\n  }\n\n  _getDomNodeName() {\n    throw new Error('_getDomNodeName is not implemented');\n  }\n\n  renderPortal(props) {\n    var {...newProps} = props;\n\n    Util.convert(newProps, 'isCancelable', {newName: 'cancelable'});\n    Util.convert(newProps, 'isDisabled', {newName: 'disabled'});\n    Util.convert(newProps, 'maskColor', {newName: 'mask-color'});\n    Util.convert(newProps, 'animationOptions', {fun: Util.animationOptionsConverter, newName: 'animation-options'});\n\n    var element = React.createElement(this._getDomNodeName(), newProps);\n    ReactDOM.render(element, this.node, this._update.bind(this));\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    return React.DOM.noscript();\n  }\n}\n\nBaseDialog.propTypes = {\n  onCancel: React.PropTypes.func,\n  isOpen: React.PropTypes.bool.isRequired,\n  isCancelable: React.PropTypes.bool,\n  isDisabled: React.PropTypes.bool,\n  animation: React.PropTypes.string,\n  maskColor: React.PropTypes.string,\n  animationOptions: React.PropTypes.object,\n  onPreShow: React.PropTypes.func,\n  onPostShow: React.PropTypes.func,\n  onPreHide: React.PropTypes.func,\n  onPostHide: React.PropTypes.func\n};\n\nBaseDialog.defaultProps = {\n  isCancelable: true,\n  isDisabled: false\n};\n\nexport default BaseDialog;\n","import BaseDialog from './BaseDialog.jsx';\nimport React from 'react';\n\n/**\n * @original ons-alert-dialog\n * @category dialog\n * @tutorial react/Reference/dialog\n * @description\n * [en]\n *   Alert dialog that is displayed on top of the current screen. Useful for displaying questions, warnings or error messages to the user. The title, content and buttons can be easily customized and it will automatically switch style based on the platform.\n * [/en]\n * [jp][/jp]\n * @example\n   <AlertDialog isOpen={this.state.isOpen} onCancel={this.handleCancel.bind(this)} cancelable>\n     <div className=\"alert-dialog-title\">Warning!</div>\n     <div className=\"alert-dialog-content\">\n       An error has occurred!\n     </div>\n     <div className=\"alert-dialog-footer\">\n       <Button onClick={this.handleCancel.bind(this)} className=\"alert-dialog-button\">\n         Cancel\n       </Button>\n       <Button onClick={this.handleCancel.bind(this)} className=\"alert-dialog-button\">\n         Ok\n       </Button>\n     </div>\n   </AlertDialog>\n */\nclass AlertDialog extends BaseDialog {\n  _getDomNodeName() {\n    return 'ons-alert-dialog';\n  }\n}\n\nAlertDialog.propTypes = {\n  /**\n   * @name onCancel\n   * @type function\n   * @required false\n   * @description\n   *  [en]\n   *  Called only if isCancelable is true. It will be called after tapping the background or by pressing the back button on Android devices.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  onCancel: React.PropTypes.func,\n\n  /**\n   * @name isOpen\n   * @type bool\n   * @required true\n   * @description\n   *  [en]\n   *  Indicates whether the dialog is open and shown.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  isOpen: React.PropTypes.bool.isRequired,\n\n  /**\n   * @name isCancelable\n   * @type bool\n   * @required false\n   * @description\n   *  [en]\n   *  Specifies whether the dialog is cancelable or not.\n   *  A cancelable dialog will call onCancel  when tapping the background or or  pressing the back button on Android devices\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  isCancelable: React.PropTypes.bool,\n\n  /**\n   * @name isDisabled\n   * @type bool\n   * @required false\n   * @description\n   *  [en]\n   *  Specifies whether the dialog is disabled.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  isDisabled: React.PropTypes.bool,\n\n  /**\n   * @name animation\n   * @type string\n   * @required false\n   * @description\n   *  [en]\n   *  The animation used when showing and hiding the dialog. Can be either `\"none\"` or `\"default\"`.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  animation: React.PropTypes.string,\n\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the dialog.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name maskColor\n   * @type string\n   * @required false\n   * @description\n   *  [en]Color of the background mask. Default is \"rgba(0, 0, 0, 0.2)\"[/en]\n   *  [jp] [/jp]\n   */\n  maskColor: React.PropTypes.string,\n\n  /**\n   * @name animationOptions\n   * @type object\n   * @required false\n   * @description\n   *  [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n   *  [jp] [/jp]\n   */\n  animationOptions: React.PropTypes.object,\n\n  /**\n   * @name onPreShow\n   * @type function\n   * @required false\n   * @description\n   *  [en]\n   *  Called just before the alert dialog is displayed.\n   *  [/en]\n   *  [jp][/jp]\n   */\n  onPreShow: React.PropTypes.func,\n\n  /**\n   * @name onPostShow\n   * @type function\n   * @required false\n   * @description\n   *  [en]\n   *  Called just after the alert dialog is displayed.\n   *  [/en]\n   *  [jp][/jp]\n   */\n  onPostShow: React.PropTypes.func,\n\n  /**\n   * @name onPreHide\n   * @type function\n   * @required false\n   * @description\n   *  [en]Called just before the alert dialog is hidden.[/en]\n   *  [jp][/jp]\n   */\n  onPreHide: React.PropTypes.func,\n\n  /**\n   * @name onPostHide\n   * @type function\n   * @required false\n   * @description\n   *  [en]Called just after the alert dialog is hidden.[/en]\n   *  [jp][/jp]\n   */\n  onPostHide: React.PropTypes.func\n};\n\nexport default AlertDialog;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass BasicComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateClasses = this.updateClasses.bind(this);\n  }\n\n  updateClasses() {\n    var node = ReactDOM.findDOMNode(this);\n\n    if (this.props.className) {\n      if (this.lastClass) {\n        node.className = node.className.replace(this.lastClass, '');\n      }\n\n      this.lastClass = ' ' + this.props.className;\n      node.className += this.lastClass;\n    }\n\n    if (!window._superSecretOns) {\n      throw new Error(\"react-onsenui requires `onsenui`, make sure you are loading it with `import onsenui` or `require('onsenui')` before using the components\");\n    }\n\n    window._superSecretOns._autoStyle.prepare(node);\n  }\n\n  componentDidMount() {\n    this.updateClasses();\n  }\n\n  componentDidUpdate() {\n    this.updateClasses();\n  }\n}\n\nexport default BasicComponent;\n","import React from 'react';\nimport BasicComponent from './BasicComponent.jsx';\nimport Util from './Util.js';\n\nclass SimpleWrapper extends BasicComponent {\n  render() {\n    var {...others} = this.props;\n\n    Util.convert(others, 'disabled');\n    Util.convert(others, 'ripple');\n\n    return React.createElement(this._getDomNodeName(), others, this.props.children);\n  }\n};\n\nexport default SimpleWrapper;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/**\n * @original ons-back-button\n * @category toolbar\n * @tutorial react/Reference/navigator\n * @description\n * [en]\n *   Back button component for Toolbar. It enables to automatically to pop the top page of the navigator. When only presented with one page, the button is hidden automatically.\n *\n *   The default behavior can be overridden using the `onClick` prop.\n * [/en]\n * [jp][/jp]\n * @example\n * <Toolbar modifier={this.props.modifier} >\n      <div className=\"left\"><BackButton modifier={this.props.modifier}>Back</BackButton></div>\n      <div className=\"center\">{this.props.title}</div>\n   </Toolbar>\n */\nclass BackButton extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-back-button';\n  }\n\n  _updateOnClick(props) {\n    const node = ReactDOM.findDOMNode(this);\n\n    if (props.onClick) {\n      node.onClick = () => null;\n    } else {\n      delete node.onClick;\n    }\n  }\n\n  componentDidMount() {\n    this._updateOnClick(this.props);\n  }\n\n  componentWillReceiveProps(props) {\n    this._updateOnClick(props);\n  }\n};\n\nBackButton.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the back button.[/en]\n   *  [jp][/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name onClick\n   * @type function\n   * @description\n   *  [en]This function will be called ones the button is clicked. It overrides the default behavior of the back button.[/en]\n   *  [jp][/jp]\n   */\n  onClick: React.PropTypes.func\n};\n\nexport default BackButton;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\n\n/**\n * @original ons-bottom-toolbar\n * @category toolbar\n * @description\n * [en] Back button component for Toolbar. It enables to automatically to pop the top page of the navigator. When only presented with one page, the button is hidden automatically.  [/en]\n * [jp][/jp]\n * @example\n *<BottomToolbar modifier=\"material\"> Content </BottomToolbar>\n */\nclass BottomToolbar extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-bottom-toolbar';\n  }\n};\n\nBottomToolbar.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @description\n   *  [en]\n   *  Specify modifier name to specify custom styles. Optional.\n   *  [/en]\n   *  [jp][/jp]\n   */\n  modifier: React.PropTypes.string\n};\n\nexport default BottomToolbar;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\n\n/**\n * @original ons-button\n * @category button\n * @tutorial react/Reference/button\n * @description\n * [en] Button component. If you want to place a button in a toolbar, use `ToolbarButton` or `BackButton` instead. Will automatically display as a Material Design button with a ripple effect on Android.\n [/en]\n * [jp][/jp]\n * @example\n * <Button modifier=\"large--cta\">\n *   Tap Me\n * </Button>\n */\nclass Button extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-button';\n  }\n};\n\nButton.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the button.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name disabled\n   * @type bool\n   * @description\n   *  [en]\n   *  Specifies whether the button is disabled.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  disabled: React.PropTypes.bool,\n\n  /**\n   * @name ripple\n   * @type bool\n   * @description\n   *  [en]\n   *  Specifies whether the button has a ripple effect.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  ripple: React.PropTypes.bool,\n\n  /**\n   * @name onClick\n   * @type function\n   * @description\n   *  [en] This function will be called ones the button is clicked. [/en]\n   *  [jp] [/jp]\n   */\n  onClick: React.PropTypes.func\n};\n\nexport default Button;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Util from './Util.js';\n\n/**\n * @original ons-carousel\n * @category carousel\n * @tutorial react/Reference/carousel\n * @description\n * [en] Carousel component. A carousel can be used to display several items in the same space.\n *     The component supports displaying content both horizontally and vertically. The user can scroll through the items by dragging and it can also be controller programmatically.\n [/en]\n * [jp][/jp]\n * @example\n *    <Carousel\n          onPostChange={() => console.log('onPostChange')}\n          onOverscroll={() => console.log('onOverscroll')}\n          onRefresh={() => console.log('onRefresh')}\n          ref='carousel' swipeable overscrollable autoScroll fullscreen autoScrollRatio={0.2}>\n          <CarouselItem style={{backgroundColor: 'gray'}}>\n            <div className='item-label'>GRAY</div>\n          </CarouselItem>\n          <CarouselItem style={{backgroundColor: '#085078'}}>\n            <div className='item-label'>BLUE</div>\n          </CarouselItem>\n        </Carousel>\n\n */\nclass Carousel extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-carousel';\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    var node = ReactDOM.findDOMNode(this);\n    CustomElements.upgrade(node);\n    node.addEventListener('postchange', this.props.onPostChange);\n    node.addEventListener('refresh', this.props.onRefresh);\n    node.addEventListener('overscroll', this.props.onOverscroll);\n  }\n\n  componentWillReceiveProps(props) {\n    var node = ReactDOM.findDOMNode(this);\n    if (this.props.index !== props.index) {\n      node.setActiveIndex(props.index, props.animationOptions);\n    }\n  }\n\n  componentWillUnmount() {\n    var node = ReactDOM.findDOMNode(this);\n    node.removeEventListener('postchange', this.props.onPostChange);\n    node.removeEventListener('refresh', this.props.onRefresh);\n    node.removeEventListener('overscroll', this.props.onOverscroll);\n  }\n\n  render() {\n    var {...others} = this.props;\n\n    ['fullscreen', 'swipeable', 'disabled', 'centered', 'overscrollable', 'centered'].forEach((el) => {\n      Util.convert(others, el);\n    });\n\n    Util.convert(others, 'itemWidth', {fun: Util.sizeConverter, newName: 'item-width'});\n    Util.convert(others, 'itemHeight', {fun: Util.sizeConverter, newName: 'item-height'});\n    Util.convert(others, 'autoScroll', {newName: 'auto-scroll'});\n    Util.convert(others, 'autoRefresh', {newName: 'auto-refresh'});\n    Util.convert(others, 'autoScrollRatio', {newName: 'auto-scroll-ratio'});\n    Util.convert(others, 'index', {newName: 'initial-index'});\n    Util.convert(others, 'animationOptions', {fun: Util.animationOptionsConverter, newName: 'animation-options'});\n\n    return React.createElement(this._getDomNodeName(), others, this.props.children);\n  }\n};\n\nCarousel.propTypes = {\n\n  /**\n   * @name direction\n   * @type string\n   * @required false\n   * @description\n   *  [en]The direction of the carousel. Can be either \"horizontal\" or \"vertical\". Default is \"horizontal\".[/en]\n   *  [jp] [/jp]\n   */\n  direction: React.PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @name fullscreen\n   * @type bool\n   * @description\n   *  [en]If true, the carousel will cover the whole screen.[/en]\n   *  [jp] [/jp]\n   */\n  fullscreen: React.PropTypes.bool,\n\n  /**\n   * @name overscrollable\n   * @type bool\n   * @description\n   *  [en]If true, the carousel will be scrollable over the edge. It will bounce back when released.[/en]\n   *  [jp] [/jp]\n   */\n  overscrollable: React.PropTypes.bool,\n\n  /**\n   * @name centered\n   * @type bool\n   * @description\n   *  [en]If true, the carousel then the selected item will be in the center of the carousel instead of the beginning. Useful only when the items are smaller than the carousel.[/en]\n   *  [jp] [/jp]\n   */\n  centered: React.PropTypes.bool,\n\n  /**\n   * @name itemWidth\n   * @type number\n   * @description\n   *  [en]ons-carousel-item's width. Only works when the direction is set to \"horizontal\".[/en]\n   *  [jp] [/jp]\n   */\n  itemWidth: React.PropTypes.oneOf(React.PropTypes.string, React.PropTypes.string),\n\n  /**\n   * @name itemHeight\n   * @type number\n   * @description\n   *  [en]ons-carousel-item's height. Only works when the direction is set to \"vertical\".[/en]\n   *  [jp] [/jp]\n   */\n  itemHeight: React.PropTypes.oneOf(React.PropTypes.string, React.PropTypes.string),\n\n  /**\n   * @name autoScroll\n   * @type bool\n   * @description\n   *  [en]If true, the carousel will be automatically scrolled to the closest item border when released.[/en]\n   *  [jp] [/jp]\n   */\n  autoScroll: React.PropTypes.bool,\n\n  /**\n   * @name autoScrollRatio\n   * @type number\n   * @description\n   *  [en]A number between 0.0 and 1.0 that specifies how much the user must drag the carousel in order for it to auto scroll to the next item.[/en]\n   *  [jp] [/jp]\n   */\n  autoScrollRatio: React.PropTypes.number,\n\n  /**\n   * @name swipeable\n   * @type bool\n   * @description\n   *  [en]If true, the carousel can be scrolled by drag or swipe.[/en]\n   *  [jp] [/jp]\n   */\n  swipeable: React.PropTypes.bool,\n\n  /**\n   * @name disabled\n   * @type bool\n   * @description\n   *  [en]If true, the carousel will be disabled.[/en]\n   *  [jp] [/jp]\n   */\n  disabled: React.PropTypes.bool,\n\n  /**\n   * @name index\n   * @type number\n   * @description\n   *  [en]Specify the index of the ons-carousel-item to show. Default is 0.[/en]\n   *  [jp] [/jp]\n   */\n  index: React.PropTypes.number,\n\n  /**\n   * @name autoRefresh\n   * @type bool\n   * @description\n   *  [en]When this attribute is set the carousel will automatically refresh when the number of child nodes change.[/en]\n   *  [jp] [/jp]\n   */\n  autoRefresh: React.PropTypes.bool,\n\n  /**\n   * @name onPostChange\n   * @type function\n   * @description\n   *  [en]Called just after the current carousel item has changed.  [/en]\n   *  [jp] [/jp]\n   */\n  onPostChange: React.PropTypes.func,\n\n  /**\n   * @name onRefresh\n   * @type function\n   * @description\n   *  [en]Called when the carousel has been refreshed. [/en]\n   *  [jp] [/jp]\n   */\n  onRefresh: React.PropTypes.func,\n\n  /**\n   * @name onOverscroll\n   * @type function\n   * @description\n   *  [en]Called when the carousel has been overscrolled. [/en]\n   *  [jp] [/jp]\n   */\n  onOverscroll: React.PropTypes.func,\n\n  /**\n   * @name animationOptions\n   * @type object\n   * @required false\n   * @description\n   *  [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n   *  [jp] [/jp]\n   */\n  animationOptions: React.PropTypes.object\n};\n\nexport default Carousel;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\n\n/**\n * @original ons-carousel-item\n * @category carousel\n * @tutorial react/Reference/carousel\n * @description\n * [en] Carousel item component. Used as a child of the `<ons-carousel>` element.\n [/en]\n * [jp][/jp]\n * @example\n*  <Carousel swipeable overscrollable autoScroll fullscreen >\n     <CarouselItem style={{backgroundColor: 'gray'}}>\n       <div className='item-label'>GRAY</div>\n     </CarouselItem>\n     <CarouselItem style={{backgroundColor: '#085078'}}>\n       <div className='item-label'>BLUE</div>\n     </CarouselItem>\n   </Carousel>\n */\nclass CarouselItem extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-carousel-item';\n  }\n};\n\nCarouselItem.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @description\n   *  [en]\n   *  Specify modifier name to specify custom styles. Optional.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  modifier: React.PropTypes.string\n};\n\nexport default CarouselItem;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\nimport Util from './Util.js';\n\n/**\n * @original ons-col\n * @category grid\n * @description\n * [en]\n * Represents a column in the grid system. Use with `<ons-row>` to layout components.\n * [/en]\n * [jp][/jp]\n * <Row>\n *   <Col width={50}>\n  *   <ons-icon icon=\"fa-twitter\"></ons-icon>\n *   </Col>\n *   <Col>Text</Col>\n * </Row>\n */\nclass Col extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-col';\n  }\n\n  render() {\n    var {...others} = this.props;\n\n    Util.convert(others, 'verticalAlign', {newName: 'vertical-align'});\n    Util.convert(others, 'width', {fun: Util.sizeConverter});\n\n    return React.createElement(this._getDomNodeName(), others, this.props.children);\n  }\n\n};\n\nCol.propTypes = {\n\n  /**\n  * @name verticalAlign\n  * @type {String}\n  * @description\n  *   [en]Short hand attribute for aligning vertically. Valid values are top, bottom, and center.[/en]\n  *   [ja][/ja]\n  */\n  verticalAlign: React.PropTypes.oneOf(['top', 'bottom', 'center']),\n\n  /**\n  * @name width\n  * @type {String}\n  * @description\n  *   [en]The width of the column. Valid values are css width values (\"10%\", 50).[/en]\n  *   [ja][/ja]\n  */\n  width: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.string])\n};\n\nexport default Col;\n","import BaseDialog from './BaseDialog.jsx';\nimport React from 'react';\n\n/**\n * @original ons-dialog\n * @category dialog\n * @tutorial react/Reference/dialog\n * @description\n * [en]  Dialog that is displayed on top of current screen. As opposed to the AlertDialog element, this component can contain any kind of content.  The dialog is useful for displaying menus, additional information or to ask the user to make a decision.  It will automatically be displayed as Material Design when running on an Android device.\n [/en]\n * [jp][/jp]\n * @example\n   <Dialog onCancel={this.onCancel}\n     isOpen={this.props.isOpen}\n     style={{height: 250}}  cancelable>\n     <Page>\n       Page Content\n     </Page>\n    </Dialog>\n\n */\nclass Dialog extends BaseDialog {\n  _getDomNodeName() {\n    return 'ons-dialog';\n  }\n}\n\nDialog.propTypes = {\n  /**\n   * @name onCancel\n   * @type function\n   * @required false\n   * @description\n   *  [en]\n   *  Called only if isCancelable is true. It will be called after tapping the background or by pressing the back button on Android devices.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  onCancel: React.PropTypes.func,\n\n  /**\n   * @name isOpen\n   * @type bool\n   * @required true\n   * @description\n   *  [en]\n   *  Indicates whether the dialog is open and shown.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  isOpen: React.PropTypes.bool.isRequired,\n\n  /**\n   * @name isCancelable\n   * @type bool\n   * @required false\n   * @description\n   *  [en]\n   *  Specifies whether the dialog is cancelable or not.\n   *  A cancelable dialog will call onCancel  when tapping the background or or  pressing the back button on Android devices\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  isCancelable: React.PropTypes.bool,\n\n  /**\n   * @name isDisabled\n   * @type bool\n   * @required false\n   * @description\n   *  [en]\n   *  Specifies whether the dialog is disabled.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  isDisabled: React.PropTypes.bool,\n\n  /**\n   * @name animation\n   * @type string\n   * @required false\n   * @description\n   *  [en]\n   *  The animation used when showing and hiding the dialog. Can be either `\"none\"` or `\"default\"`.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  animation: React.PropTypes.string,\n\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the dialog.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name maskColor\n   * @type string\n   * @required false\n   * @description\n   *  [en]Color of the background mask. Default is \"rgba(0, 0, 0, 0.2)\"[/en]\n   *  [jp] [/jp]\n   */\n  maskColor: React.PropTypes.string,\n\n  /**\n   * @name animationOptions\n   * @type object\n   * @required false\n   * @description\n   *  [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n   *  [jp] [/jp]\n   */\n  animationOptions: React.PropTypes.object,\n\n  /**\n   * @name onPreShow\n   * @type function\n   * @required false\n   * @description\n   *  [en]\n   *  Called just before the alert dialog is displayed.\n   *  [/en]\n   *  [jp][/jp]\n   */\n  onPreShow: React.PropTypes.func,\n\n  /**\n   * @name onPostShow\n   * @type function\n   * @required false\n   * @description\n   *  [en]\n   *  Called just after the alert dialog is displayed.\n   *  [/en]\n   *  [jp][/jp]\n   */\n  onPostShow: React.PropTypes.func,\n\n  /**\n   * @name onPreHide\n   * @type function\n   * @required false\n   * @description\n   *  [en]Called just before the alert dialog is hidden.[/en]\n   *  [jp][/jp]\n   */\n  onPreHide: React.PropTypes.func,\n\n  /**\n   * @name onPostHide\n   * @type function\n   * @required false\n   * @description\n   *  [en]Called just after the alert dialog is hidden.[/en]\n   *  [jp][/jp]\n   */\n  onPostHide: React.PropTypes.func\n};\n\nexport default Dialog;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\n\n/**\n * @original ons-fab\n * @category fab\n * @tutorial react/Reference/fab\n * @description\n * [en] The Floating action button is a circular button defined in the [Material Design specification](https://www.google.com/design/spec/components/buttons-floating-action-button.html). They are often used to promote the primary action of the app.\n *     It can be displayed either as an inline element or in one of the corners. Normally it will be positioned in the lower right corner of the screen.\n [/en]\n * [jp][/jp]\n * @example\n * <SpeedDial disabled={false} direction='right' onClick={() => console.log('test1')} position='left bottom'>\n     <Fab>\n       <Icon icon='fa-twitter' size={26} fixedWidth={false} style={{verticalAlign: 'middle'}} />\n     </Fab>\n     <SpeedDialItem onClick={() => console.log('speed A')}> A </SpeedDialItem>\n     <SpeedDialItem onClick={() => console.log('speed B')}> B </SpeedDialItem>\n     <SpeedDialItem onClick={() => console.log('speed C')}> C </SpeedDialItem>\n     <SpeedDialItem onClick={() => console.log('speed D')}> D </SpeedDialItem>\n   </SpeedDial>\n  */\nclass Fab extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-fab';\n  }\n};\n\nFab.propTypes = {\n    /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the button.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name ripple\n   * @type bool\n   * @description\n   *  [en]If true,  the button will have a ripple effect when tapped.[/en]\n   *  [jp] [/jp]\n   */\n  ripple: React.PropTypes.bool,\n\n  /**\n   * @namep position\n   * @type string\n   * @required false\n   * @description\n   *  [en]The position of the button. Should be a string like `\"bottom right\"` or `\"top left\"`. If this attribute is not defined it will be displayed as an inline element.[/en]\n   *  [jp] [/jp]\n   */\n  position: React.PropTypes.string,\n\n  /**\n   * @name disabled\n   * @type bool\n   * @description\n   *  [en] If true, the button will be disabled. [/en]\n   *  [jp] [/jp]\n   */\n  disabled: React.PropTypes.string,\n\n  /**\n   * @name onClick\n   * @type function\n   * @description\n   *  [en] This function will be called ones the button is clicked. [/en]\n   *  [jp] [/jp]\n   */\n  onClick: React.PropTypes.func\n};\n\nexport default Fab;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\nimport Util from './Util.js';\n\n/**\n * @original ons-icon\n * @category icon\n * @tutorial react/Reference/icon\n * @description\n * [en]\n * Displays an icon. The following icon suites are available:\n *   *  [Font Awesome](https://fortawesome.github.io/Font-Awesome/)\n *   *  [Ionicons](http://ionicons.com/)\n *   *  [Material Design Iconic Font](http://zavoloklom.github.io/material-design-iconic-font/)\n * [/en]\n * [jp][/jp]\n * @example\n  <Icon\n    size={{default: 32, material: 40}}\n    icon={{default: 'ion-navicon', material: 'md-menu'}}\n  />\n/> */\nclass Icon extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-icon';\n  }\n\n  render() {\n    var {icon, size, ...others} = this.props;\n\n    Util.convert(others, 'fixedWidth', {newName: 'fixed-width'});\n    Util.convert(others, 'spin');\n\n    if (icon) {\n      if ((typeof icon) === 'string') {\n        others.icon = icon;\n      } else {\n        let keys = Object.keys(icon).filter((a) => a !== 'default');\n        let innerString = keys.map((key) => key + ':' + icon[key] + '');\n        others.icon = icon.default + ', ' + innerString.join(',');\n      }\n    }\n\n    if (size) {\n      if ((typeof size) === 'number') {\n        others.size = `${size}px`;\n      } else {\n        let keys = Object.keys(size).filter((a) => a !== 'default');\n        let innerString = keys.map((key) => key + ':' + size[key] + 'px');\n        others.size = size.default + 'px, ' + innerString.join(',');\n      }\n    }\n\n    return React.createElement(this._getDomNodeName(), others, this.props.children);\n  }\n\n};\n\nIcon.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the icon.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name icon\n   * @type 'object or string'\n   * @description\n   *  [en] can be either a string or an object. If it is an string, it is set to an specific icon like 'ions-navicon'. If it is an object, it represents a dictionary of the icons depending on the modifier e.g.   `{{default: 'ion-navicon', material: 'md-menu'}}` [/en]\n   *  [jp] [/jp]\n   */\n  icon: React.PropTypes.oneOfType([\n    React.PropTypes.string,\n    React.PropTypes.objectOf(React.PropTypes.string)\n  ]),\n\n  /**\n   * @name size\n   * @type 'object or number'\n   * @description\n   *  [en] can be either a number or an object. If it is an number, it  specifies the icon size with a number in pixels. If it is an object, it represents a dictionary of the icon sizes depending on the modifier e.g.   `{{default: 20, material: 18}}` [/en]\n   *  [jp] [/jp]\n   */\n  size: React.PropTypes.oneOfType([\n    React.PropTypes.number,\n    React.PropTypes.objectOf(React.PropTypes.number)\n  ]),\n\n  /**\n   * @name rotate\n   * @type number\n   * @description\n   *  [en] Number of degrees to rotate the icon. Valid values are 90, 180 and 270. [/en]\n   *  [jp] [/jp]\n   */\n  rotate: React.PropTypes.oneOf([0, 90, 180, 270]),\n\n  /**\n   * @name fixedWidth\n   * @type bool\n   * @description\n   * [en] When used in a list, you want the icons to have the same width so that they align vertically by defining this attribute. [/en]\n   *  [jp] [/jp]\n   */\n  fixedWidth: React.PropTypes.bool,\n\n  /**\n   * @name spin\n   * @type bool\n   * @description\n   * [en] Specify whether the icon should be spinning. [/en]\n   *  [jp] [/jp]\n   */\n  spin: React.PropTypes.bool\n\n};\n\nexport default Icon;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BasicComponent from './BasicComponent.jsx';\nimport Util from './Util.js';\n\nconst EVENT_TYPES = ['change', 'input'];\n\n/**\n * @original ons-input\n * @category input\n * @tutorial react/Reference/input\n * @description\n * [en]\n * An input element. The `type` attribute can be used to change the input type. All text input types as well as `checkbox` and `radio` are supported. The component will automatically render as a Material Design input on Android devices. Most attributes that can be used for a normal `<input>` element can also be used on the `<ons-input>` element..\n [/en]\n * [jp][/jp]\n * @example\n * <Input\n *   value={this.state.text} float\n *   onChange={(event) => { this.setState({text: event.target.value})} }\n *   modifier='material'\n *   placeholder='Username' />\n */\nclass Input extends BasicComponent {\n  componentDidMount() {\n    super.componentDidMount();\n    var node = ReactDOM.findDOMNode(this);\n\n    EVENT_TYPES.forEach((eventType) => {\n      node.addEventListener(eventType, this.props.onChange);\n    });\n  }\n\n  componentWillUnmount() {\n    var node = ReactDOM.findDOMNode(this);\n\n    EVENT_TYPES.forEach((eventType) => {\n      node.removeEventListener(eventType, this.props.onChange);\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    var node = ReactDOM.findDOMNode(this);\n\n    if (typeof props.value !== 'undefined') {\n      node.value = props.value;\n    }\n\n    if (typeof props.checked !== 'undefined') {\n      node.checked = props.checked;\n    }\n  }\n\n  render() {\n    var {checked, ...other} = this.props;\n    other['input-id'] = this.props.inputId;\n\n    Util.convert(other, 'disabled');\n\n    return (\n      <ons-input checked={checked ? '' : null} {...other} />\n    );\n  }\n}\n\nInput.propTypes = {\n    /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the input.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name disabled\n   * @type bool\n   * @description\n   *  [en]\n   *  Specifies whether the input is disabled.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  disabled: React.PropTypes.bool,\n\n  /**\n   * @name onChange\n   * @type function\n   * @description\n   *  [en] Called when the text of the input changes.[/en]\n   *  [jp][/jp]\n   */\n  onChange: React.PropTypes.func,\n\n  /**\n   * @name value\n   * @type string\n   * @description\n   *  [en] Content of the input.[/en]\n   *  [jp][/jp]\n   */\n  value: React.PropTypes.string,\n\n  /**\n   * @name placehoder\n   * @type string\n   * @description\n   *  [en] Placeholder text. In Material Design this placeholder will be a floating label. [/en]\n   *  [jp][/jp]\n   */\n  placeholder: React.PropTypes.string,\n\n  /**\n   * @name type\n   * @type string\n   * @description\n   *  [en]  Specify the input type. This is the same as the \"type\" attribute for normal inputs.\n   *    Please take a look at [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-type) for an exhaustive list of possible values. Depending on the platform and browser version some of these might not work.\n [/en]\n   *  [jp][/jp]\n   */\n  type: React.PropTypes.string,\n\n  /**\n   * @name type\n   * @type inputId\n   * @description\n   *  [en]  Specify the \"id\" attribute of the inner <input> element. This is useful when using <label for=\"...\"> elements [/en]\n   *  [jp][/jp]\n   */\n  inputId: React.PropTypes.string,\n\n  /**\n   * @name type\n   * @type inputId\n   * @description\n   *  [en]  If this attribute is present, the placeholder will be animated in Material Design.  [/en]\n   *  [jp][/jp]\n   */\n  'float': React.PropTypes.bool\n};\n\nexport default Input;\n","import React from 'react';\nimport BasicComponent from './BasicComponent.jsx';\n\n/**\n * @original ons-lazy-repeat\n * @category lazy-list\n * @tutorial react/Reference/lazy-list\n * @description\n * [en] Using this component a list with millions of items can be rendered without a drop in performance.\n *     It does that by \"lazily\" loading elements into the DOM when they come into view and\n *     removing items from the DOM when they are not visible.\n [/en]\n * [jp][/jp]\n * @example\n *\n  renderRow(index) {\n    return (\n      <ListItem key={index}>\n        {'Item ' + (index + 1)}\n      </ListItem>\n    );\n  }\n\n  render() {\n    return (\n      <Page renderToolbar={() => <MyToolbar title='LazyList' />} >\n        <div style={{height: 100}}>\n          <LazyList\n            length={1000}\n            renderRow={() =>\n              <ListItem key={index}>\n                {'Item ' + (index + 1)}\n              </ListItem>\n            }\n            calculateItemHeight={() => 44}\n          />\n        </div>\n      </Page>\n    );\n  }\n}\n */\nclass LazyList extends BasicComponent {\n  constructor(props) {\n    super(props);\n    this.state = {children: []};\n    this.update = this.update.bind(this);\n  }\n\n  update(props) {\n    var self = this;\n    CustomElements.upgrade(this.refs.lazyRepeat);\n\n    this.refs.lazyRepeat.delegate = {\n      calculateItemHeight: function(index) {\n        return props.calculateItemHeight(index);\n      },\n      _render: function(items, newHeight) {\n        var createElement = function({index: index, top: top}) {\n          return props.renderRow(index);\n        };\n\n        var el = items.map(createElement);\n        self.setState({children: el, height: newHeight},\n                      () => {\n                        var list = this.refs.list;\n                        // ignore i=0 <lazy repat\n                        for (var i = 1; i < list.children.length; i++) {\n                          list.children[i].style.position = 'absolute';\n                          list.children[i].style.top = items[i - 1].top + 'px';\n                          list.children[i].style.left = '0px';\n                          list.children[i].style.right = '0px';\n                        }\n                      });\n      }.bind(this),\n      countItems: function() {\n        return props.length;\n      }\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    var helpProps = {\n      ...this.props,\n      ...newProps\n    };\n    this.update(helpProps);\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    this.update(this.props);\n  }\n\n  render() {\n    return (\n      <ons-list {...this.props} ref='list'\n        class='list' style={{position: 'relative', height: this.state.height}}\n        >\n        <ons-lazy-repeat ref='lazyRepeat' />\n        {this.state.children}\n       </ons-list>\n    );\n  }\n}\n\nLazyList.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the lazy list.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name length\n   * @type number\n   * @description\n   *  [en]The length of the list.[/en]\n   *  [jp] [/jp]\n   */\n  length: React.PropTypes.number.isRequired,\n\n  /**\n   * @name renderRow\n   * @type function\n   * @description\n   *  [en] A function given the index of the to display row, renders it.[/en]\n   *  [jp] [/jp]\n   */\n  renderRow: React.PropTypes.func.isRequired,\n\n  /**\n   * @name calculateItemHeight\n   * @type function\n   * @description\n   *  [en] A function given the index of the to row, returns the height of it.[/en]\n   *  [jp] [/jp]\n   */\n  calculateItemHeight: React.PropTypes.func.isRequired\n};\n\nexport default LazyList;\n","import React from 'react';\nimport BasicComponent from './BasicComponent.jsx';\n\n/**\n * @original ons-list\n * @category list\n * @tutorial react/Reference/list\n * @description\n *   [en]\n *     Component for representing a list. It takes an array called datasrouce and calls renderRow(row, index) for every row.  Furthermore, the header and the footer can be specified with `renderRow` and `renderHeader` respectivly. [/en]\n * [jp][/jp]\n * @example\n  <List\n    dataSource={['Row 1', 'Row 2']}\n    renderHeader={this.renderHeader}\n    renderRow={(row, idx) => (\n      <ListItem modifier={idx === this.state.data.length - 1 ? 'longdivider' : null}>\n      {row}\n  <Button modifier=\"quiet\" onClick={this.remove.bind(this, idx)}>Remove</Button>\n  </ListItem>\n  )}\n  renderFooter={this.renderFooter}\n  />\n */\nclass List extends BasicComponent {\n  render() {\n    var pages = this.props.dataSource.map((data, idx) => this.props.renderRow(data, idx));\n\n    return (\n      <ons-list {...this.props} ref='list'>\n        {this.props.renderHeader()}\n        {pages}\n        {this.props.renderFooter()}\n      </ons-list>\n    );\n  }\n}\n\nList.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @description\n   *  [en]\n   *  Specify modifier name to specify custom styles.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  modifier: React.PropTypes.string,\n\n   /**\n   * @name dataSource\n   * @type string\n   * @description\n   *  [en]\n   *  Specify modifier name to specify custom styles.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  dataSource: React.PropTypes.array.isRequired,\n\n   /**\n   * @name renderRow\n   * @type function\n   * @description\n   *  [en]\n   *  Function to specify the rendering function for every element in\n   *  in the dataSouce.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  renderRow: React.PropTypes.func.isRequired,\n\n   /**\n   * @name renderHeader\n   * @type function\n   * @description\n   *  [en]\n   *  Function to specify the rendering function for the header\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  renderHeader: React.PropTypes.func,\n\n   /**\n   * @name renderFooter\n   * @type function\n   * @description\n   *  [en]\n   *  Function to specify the rendering function for the footer\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  renderFooter: React.PropTypes.func\n};\n\nList.defaultProps = {\n  renderHeader: () => null,\n  renderFooter: () => null\n};\n\nexport default List;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\n\n/**\n * @original ons-list-header\n * @category list\n * @tutorial react/Reference/list\n * @description\n * [en] Header element for list items. Must be put inside ons-list component.\n [/en]\n * [jp][/jp]\n * @example\n   <List\n     dataSource={this.state.data}\n     renderHeader={() =>\n        <ListHeader style={{fontSize: 15}} className=\"testClass\"> Header Text </ListHeader> }\n    renderRow={(row, idx) => (\n      <ListItem > {row} </ListItem>\n    )}\n  />\n */\nclass ListHeader extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-list-header';\n  }\n};\n\nListHeader.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @description\n   *  [en]\n   *  Specify modifier name to specify custom styles. Optional.\n   *  [/en]\n   *  [jp][/jp]\n   */\n  modifier: React.PropTypes.string\n};\n\nexport default ListHeader;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport SimpleWrapper from './SimpleWrapper.jsx';\nimport Util from './Util.js';\n\n/**\n * @original ons-list-item\n * @category list\n * @tutorial react/Reference/list\n * @description\n *   [en]\n *   Component that represents each item in the list. Must be put inside the `List` component. The list item is composed of three parts that are represented with the `left`, `center` and `right` classes. These classes can be used to ensure that the content of the list items is properly aligned.\n *   [/en]\n * [jp][/jp]\n * @example\n   <ListItem>\n *   <div className=\"left\">Left</div>\n *   <div className=\"center\">Center</div>\n *   <div className=\"right\">Right</div>\n * </ListItem>\n */\nclass ListItem extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-list-item';\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    this.node = ReactDOM.findDOMNode(this);\n  }\n\n  componentDidUpdate() {\n    super.componentDidUpdate();\n    this.node._compile();\n  }\n\n  render() {\n    var {...others} = this.props;\n\n    Util.convert(others, 'tappable');\n    Util.convert(others, 'tapBackgroundColor', {newName: 'tab-background-color'});\n    Util.convert(others, 'lockOnDrag', {newName: 'lock-on-drag'});\n\n    return React.createElement(this._getDomNodeName(), others, this.props.children);\n  }\n};\n\nListItem.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en] The appearance of the list item.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name tappable\n   * @type bool\n   * @description\n   *  [en]\n   *  Specifies whether the list item is tappable.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  tappable: React.PropTypes.bool,\n\n  /**\n   * @name tapBackgroundColor\n   * @type string\n   * @description\n   *  [en]\n   *  Changes the background color when tapped. For this to work, the attribute \"tappable\" needs to be set. The default color is \"#d9d9d9\". It will display as a ripple effect on Android.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  tapBackgroundColor: React.PropTypes.string,\n\n  /**\n   * @name lockOnDrag\n   * @type bool\n   * @description\n   *  [en] Prevent vertical scrolling when the user drags horizontally. [/en]\n   *  [jp] [/jp]\n   */\n  lockOnDrag: React.PropTypes.bool\n};\n\nexport default ListItem;\n","import React from 'react';\nimport BasicComponent from './BasicComponent.jsx';\nimport Util from './Util.js';\n\n/**\n * @original ons-navigator\n * @category navigator\n * @tutorial react/Reference/navigator\n * @description\n * [en] This component is responsible for page transitioning and managing the pages of your OnsenUI application. In order to manage to display the pages, the  navigator needs to define the `renderPage` method, that takes an route and a navigator and  converts it to an page.  [/en]\n * [jp] どうしよう[/jp]\n * @example\n  <Navigator\n    renderPage={(route, navigator) =>\n     <MyPage\n       title={route.title}\n       onPop={() => navigator.popPage()}\n       />\n    }\n    initialRoute={{\n        title: 'First Page'\n    }} />\n   }\n }\n */\nclass Navigator extends BasicComponent {\n  constructor(props) {\n    super(props);\n    this.pages = [];\n    this.state = { };\n  }\n\n  update(pages, obj) {\n    return new Promise((resolve) => {\n      this.setState({}, resolve);\n    });\n  }\n\n  /**\n   * @method resetPage\n   * @signature resetPage(route, options = {})\n   * @param {Object} [route]\n   *   [en] The route that the page should be reset to.[/en]\n   *   [ja] どうしよう [/ja]\n   * @return {Promise}\n   *   [en]Promise which resolves to the revealed page.[/en]\n   *   [ja]明らかにしたページを解決するPromiseを返します。[/ja]\n   * @description\n   *   [en]Resets the current page[/en]\n   *   [ja]どうしよう[/ja]\n   */\n  resetPage(route, options = {}) {\n    return this.resetPageStack([route], options);\n  }\n\n  /**\n   * @method resetPageStack\n   * @signature resetPageStack(route, options = {})\n   * @param {Array} [routes]\n   *   [en] The routes that the navigator should be reset to.[/en]\n   *   [ja] どうしよう [/ja]\n   * @return {Promise}\n   *   [en]Promise which resolves to the revealed page.[/en]\n   *   [ja]明らかにしたページを解決するPromiseを返します。[/ja]\n   * @description\n   *   [en] Resets the navigator to the current page stack[/en]\n   *   [ja] どうしよう[/ja]\n   */\n  resetPageStack(routes, options = {}) {\n    if (this.isRunning) {\n      return Promise.reject('Navigator is already running animation.');\n    }\n\n    return new Promise((resolve) => {\n      var lastRoute = routes[routes.length - 1];\n      var newPage = this.props.renderPage(lastRoute, this);\n      this.routes.push(lastRoute);\n\n      this.refs.navi._pushPage(options, this.update.bind(this), this.pages, newPage).then(() => {\n        this.routes = routes;\n\n        var renderPage = (route) => {\n          this.props.renderPage(route, this);\n        };\n\n        this.pages = routes.map(renderPage);\n        this.update().then(resolve);\n      });\n    });\n  }\n\n  /**\n   * @method pushPage\n   * @signature pushPage(route, options = {})\n   * @param {Array} [routes]\n   *   [en] The routes that the navigator should push to.[/en]\n   *   [ja] どうしよう [/ja]\n   * @return {Promise}\n   *   [en] Promise which resolves to the revealed page.[/en]\n   *   [ja] 明らかにしたページを解決するPromiseを返します。[/ja]\n   * @description\n   *   [en] Pushes a page to the page stack[/en]\n   *   [ja] どうしよう[/ja]\n   */\n  pushPage(route, options = {}) {\n    if (this.refs.navi._isRunning) {\n      return Promise.reject('Navigator is already running animation.');\n    }\n\n    return new Promise((resolve) => {\n      var newPage = this.props.renderPage(route, navigator);\n\n      this.routes.push(route);\n      this.refs.navi._pushPage(options,\n                               this.update.bind(this),\n                               this.pages,\n                               newPage).then(resolve)\n                               .catch((error) => {\n                                 this.routes.pop();\n                                 this.pages.pop();\n                                 throw error;\n                               });\n    });\n  }\n\n  get isRunning() {\n    return this.refs.navi._isRunning;\n  }\n\n  /**\n   * @method popPage\n   * @signature popPage(route, options = {})\n   * @return {Promise}\n   *   [en] Promise which resolves to the revealed page.[/en]\n   *   [ja] 明らかにしたページを解決するPromiseを返します。[/ja]\n   * @description\n   *   [en] Pops a page out of the page stack[/en]\n   *   [ja] どうしよう[/ja]\n   */\n  popPage(options = {}) {\n    if (this.isRunning) {\n      return Promise.reject('Navigator is already running animation.');\n    }\n\n    return this.refs.navi._popPage(options, this.update.bind(this), this.pages)\n      .then(\n        () => {\n          this.routes.pop();\n        }\n      );\n  }\n\n  componentDidMount() {\n    this.refs.navi.popPage = this.popPage.bind(this);\n\n    if (this.props.initialRoute && this.props.initialRouteStack) {\n      throw new Error('In Navigator either initalRoute or initalRoutes can be set');\n    }\n\n    if (this.props.initialRoute) {\n      this.routes = [this.props.initialRoute];\n    } else if (this.props.initialRouteStack) {\n      this.routes = this.props.initialRouteStack;\n    } else {\n      this.routes = [];\n    }\n\n    this.pages = this.routes.map(\n      (route) => this.props.renderPage(route, this)\n    );\n    this.setState({});\n  }\n\n  render() {\n    // render the last two pages\n    for (var index = this.pages.length - 1;\n         index >= this.pages.length - 2 && index >= 0; index--) {\n      this.pages[index] = this.props.renderPage(this.routes[index], this);\n    }\n\n    var {...others} = this.props;\n    Util.convert(others, 'animationOptions', {fun: Util.animationOptionsConverter, newName: 'animation-options'});\n\n    return (\n      <ons-navigator {...others} ref='navi'>\n        {this.pages}\n      </ons-navigator>\n    );\n  }\n}\n\nNavigator.propTypes = {\n  /**\n   * @name renderPage\n   * @type function\n   * @required true\n   * @defaultValue null\n   * @description\n   *  [en] This function takes the current route object as a parameter and  creates returns a react componen.[/en]\n   *  [jp] どうしよう[/jp]\n   */\n  renderPage: React.PropTypes.func.isRequired,\n  /**\n   * @name initialRouteStack\n   * @type array\n   * @required false\n   * @defaultValue null\n   * @description\n   *  [en] This array contains the initial routes from the navigator,\n   *  which will be used to render the initial pages in the renderPage method.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  initialRouteStack: React.PropTypes.array,\n\n  /**\n   * @name initialRoute\n   * @type object\n   * @required false\n   * @defaultValue null\n   * @description\n   *  [en] This array contains the initial route of the navigator,\n   *  which will be used to render the initial pages in the\n   *  renderPage method.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  initialRoute: React.PropTypes.object,\n\n  /**\n   * @property animation\n   * @type {String}\n   * @description\n   *   [en]\n   *     Animation name. Available animations are `\"slide\"`, `\"lift\"`, `\"fade\"` and `\"none\"`.\n   *     These are platform based animations. For fixed animations, add `\"-ios\"` or `\"-md\"` suffix to the animation name. E.g. `\"lift-ios\"`, `\"lift-md\"`. Defaults values are `\"slide-ios\"` and `\"fade-md\"`.\n   *   [/en]\n   */\n  animation: React.PropTypes.string,\n\n  /**\n   * @name animationOptions\n   * @type object\n   * @description\n   *  [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n   *  [jp] [/jp]\n   */\n  animationOptions: React.PropTypes.object\n};\n\nexport default Navigator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BasicComponent from './BasicComponent.jsx';\n/**\n * @original ons-page\n * @category page\n * @tutorial react/Reference/page\n * @description\n * [en] This component is handling the entire page.  THe content can be scrolled. [/en]\n * [jp] どうしよう[/jp]\n * @example\n  <Page>\n    <div> Page content </div>\n  </Page>\n */\nclass Page extends BasicComponent {\n\n  componentDidMount() {\n    super.componentDidMount();\n    var node = ReactDOM.findDOMNode(this);\n    CustomElements.upgrade(node);\n    node.addEventListener('init', this.props.onInit);\n    node.addEventListener('show', this.props.onShow);\n    node.addEventListener('hide', this.props.onHide);\n  }\n\n  componentWillUnmount() {\n    var node = ReactDOM.findDOMNode(this);\n    node.removeEventListener('init', this.props.onInit);\n    node.removeEventListener('show', this.props.onShow);\n    node.removeEventListener('hide', this.props.onHide);\n  }\n\n  render() {\n    const toolbar = this.props.renderToolbar(this);\n\n    // TODO MODAL\n    const modal = null;\n\n    return <ons-page {...this.props} _compiled='true' >\n        {toolbar}\n        <div className='page__background'> </div>\n        <div className='page__content'>\n          {this.props.children}\n        </div>\n        <div className='page__extra' style={{zIndex: 10001}}>\n          {modal}\n        </div>\n      </ons-page>;\n  }\n};\n\nPage.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @description\n   *  [en]\n   *  Specify modifier name to specify custom styles. Optional.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name renderToolbar\n   * @type function\n   * @required false\n   * @defaultValue null\n   * @description\n   *  [en] This function takes the current route object as a parameter and  creates returns a react componen.[/en]\n   *  [jp] どうしよう[/jp]\n   */\n  renderToolbar: React.PropTypes.func,\n\n  /**\n   * @name onInit\n   * @type function\n   * @required false\n   * @description\n   *  [en]\n   *  \tFired right after the page is attached.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  onInit: React.PropTypes.func,\n\n  /**\n   * @name onShow\n   * @type function\n   * @required false\n   * @description\n   *  [en]\n   *  Called Fired right after the page is shown.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  onShow: React.PropTypes.func,\n\n  /**\n   * @name onHide\n   * @type function\n   * @required false\n   * @description\n   *  [en]\n   *  Called after the page is hidden.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  onHide: React.PropTypes.func\n};\n\nPage.defaultProps = {\n  renderToolbar: () => null\n};\n\nexport default Page;\n","import BaseDialog from './BaseDialog.jsx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/**\n * @original ons-popover\n * @category popover\n * @tutorial react/Reference/popover\n * @description\n *   [en]\n *     A component that displays a popover next to an element. The popover can be used to display extra information about a component or a tooltip.\n *    Another common way to use the popover is to display a menu when a button on the screen is tapped.\n *   [/en]\n * [jp][/jp]\n * @example\n * <Page>\n *  <Button ref='btn'\n  *  onClick={() => this.setState({target: this.refs.btn, isOpen: true})}/>\n    <Popover\n      isOpen={this.state.isOpen}\n      onCancel={() => this.setState({isOpen: false})}\n      getTarget={() => this.state.target} >\n      <div style={{textAlign: 'center', opacity: 0.5}}>\n        <p>This is a popover!</p>\n          <p><small>Click the background to remove the popover.</small></p>\n        </div>\n        </Popover>\n * </Page>\n */\nclass Popover extends BaseDialog {\n  _getDomNodeName() {\n    return 'ons-popover';\n  }\n\n  show() {\n    var target = this.props.getTarget();\n    target = ReactDOM.findDOMNode(target);\n    return this.node.firstChild.show(target);\n  }\n}\n\nPopover.propTypes = {\n  /**\n   * @name getTarget\n   * @type function\n   * @required true\n   * @description\n   *  [en]\n   *  This function should return react component or a domnode that the popover is showing on.\n   *  [/en]\n   *  [jp][/jp]\n   */\n  getTarget: React.PropTypes.func.isRequired,\n    /**\n   * @name onCancel\n   * @type function\n   * @required false\n   * @description\n   *  [en]\n   *  Called only if isCancelable is true. It will be called after tapping the background or by pressing the back button on Android devices.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  onCancel: React.PropTypes.func,\n\n  /**\n   * @name isOpen\n   * @type bool\n   * @required true\n   * @description\n   *  [en]\n   *  Indicates whether the dialog is open and shown.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  isOpen: React.PropTypes.bool.isRequired,\n\n  /**\n   * @name isCancelable\n   * @type bool\n   * @required false\n   * @description\n   *  [en]\n   *  Specifies whether the dialog is cancelable or not.\n   *  A cancelable dialog will call onCancel  when tapping the background or or  pressing the back button on Android devices\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  isCancelable: React.PropTypes.bool,\n\n  /**\n   * @name isDisabled\n   * @type bool\n   * @required false\n   * @description\n   *  [en]\n   *  Specifies whether the dialog is disabled.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  isDisabled: React.PropTypes.bool,\n\n  /**\n   * @name animation\n   * @type string\n   * @required false\n   * @description\n   *  [en]\n   *  The animation used when showing and hiding the dialog. Can be either `\"none\"` or `\"default\"`.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  animation: React.PropTypes.string,\n\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the dialog.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name maskColor\n   * @type string\n   * @required false\n   * @description\n   *  [en]Color of the background mask. Default is \"rgba(0, 0, 0, 0.2)\"[/en]\n   *  [jp] [/jp]\n   */\n  maskColor: React.PropTypes.string,\n\n  /**\n   * @name animationOptions\n   * @type object\n   * @required false\n   * @description\n   *  [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n   *  [jp] [/jp]\n   */\n  animationOptions: React.PropTypes.object,\n\n  /**\n   * @name onPreShow\n   * @type function\n   * @required false\n   * @description\n   *  [en]\n   *  Called just before the alert dialog is displayed.\n   *  [/en]\n   *  [jp][/jp]\n   */\n  onPreShow: React.PropTypes.func,\n\n  /**\n   * @name onPostShow\n   * @type function\n   * @required false\n   * @description\n   *  [en]\n   *  Called just after the alert dialog is displayed.\n   *  [/en]\n   *  [jp][/jp]\n   */\n  onPostShow: React.PropTypes.func,\n\n  /**\n   * @name onPreHide\n   * @type function\n   * @required false\n   * @description\n   *  [en]Called just before the alert dialog is hidden.[/en]\n   *  [jp][/jp]\n   */\n  onPreHide: React.PropTypes.func,\n\n  /**\n   * @name onPostHide\n   * @type function\n   * @required false\n   * @description\n   *  [en]Called just after the alert dialog is hidden.[/en]\n   *  [jp][/jp]\n   */\n  onPostHide: React.PropTypes.func\n};\n\nexport default Popover;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\nimport Util from './Util.js';\n\n/**\n * @original ons-progress-bar\n * @category progress\n * @tutorial react/Reference/progress\n * @description\n * [en] The component is used to display a linear progress bar. It can either display a progress bar that shows the user how much of a task has been completed. In the case where the percentage is not known it can be used to display an animated progress bar so the user can see that an operation is in progress.  [/en]\n * [jp][/jp]\n * @example\n *<ProgressBar value={55} secondaryValue={87} />\n *<ProgressBar indeterminate />\n */\nclass ProgressBar extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-progress-bar';\n  }\n\n  render() {\n    var {...others} = this.props;\n\n    Util.convert(others, 'indeterminate');\n    Util.convert(others, 'secondaryValue', {newName: 'secondary-value'});\n\n    return React.createElement(this._getDomNodeName(), others, this.props.children);\n  }\n\n};\n\nProgressBar.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the progress indicator.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name value\n   * @type number\n   * @description\n   *  [en]\n   *  Current progress. Should be a value between 0 and 100.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  value: React.PropTypes.number,\n\n  /**\n   * @name secondaryValue\n   * @type bool\n   * @description\n   *  [en]\n   *  Current secondary progress. Should be a value between 0 and 100.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  secondaryValue: React.PropTypes.number,\n\n  /**\n   * @name intermediate\n   * @type bool\n   * @description\n   *  [en] If this property is set, an infinite looping animation will be shown. [/en]\n   *  [jp] [/jp]\n   */\n  indeterminate: React.PropTypes.bool\n};\n\nexport default ProgressBar;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\nimport Util from './Util.js';\n\n/**\n * @original ons-progress-circular\n * @category progress\n * @tutorial react/Reference/progress\n * @description\n * [en] This component displays a circular progress indicator. It can either be used to show how much of a task has been completed or to show a looping animation to indicate that an operation is currently running.\n * [/en]\n * [jp][/jp]\n * @example\n *<ProgressCircular value={55} secondaryValue={87} />\n *<ProgressCircular indeterminate />\n */\nclass ProgressCircular extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-progress-circular';\n  }\n\n  render() {\n    var {...others} = this.props;\n\n    Util.convert(others, 'indeterminate');\n    Util.convert(others, 'secondaryValue', {newName: 'secondary-value'});\n\n    return React.createElement(this._getDomNodeName(), others, this.props.children);\n  }\n\n};\n\nProgressCircular.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the progress indicator.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name value\n   * @type number\n   * @description\n   *  [en]\n   *  Current progress. Should be a value between 0 and 100.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  value: React.PropTypes.number,\n\n  /**\n   * @name secondaryValue\n   * @type bool\n   * @description\n   *  [en]\n   *  Current secondary progress. Should be a value between 0 and 100.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  secondaryValue: React.PropTypes.number,\n\n  /**\n   * @name intermediate\n   * @type bool\n   * @description\n   *  [en] If this property is set, an infinite looping animation will be shown. [/en]\n   *  [jp] [/jp]\n   */\n  indeterminate: React.PropTypes.bool\n};\n\nexport default ProgressCircular;\n","import ReactDOM from 'react-dom';\nimport BasicComponent from './BasicComponent.jsx';\nimport React from 'react';\nimport Util from './Util.js';\n\n/**\n * @original ons-pull-hook\n * @category pull-hook\n * @tutorial react/Reference/pull-hook\n * @description\n * [en]  Component that adds **Pull to refresh** functionality to an `<ons-page>` element.\n *     It can be used to perform a task when the user pulls down at the top of the page. A common usage is to refresh the data displayed in a page.\n [/en]\n * [jp] どうしよう[/jp]\n * @example\n\n    return (\n      <PullHook onChange={this.onChange} onLoad={this.onLoad}>\n      {\n       (this.state.pullHookState === 'initial') ?\n        <span >\n          <Icon size={35} spin={false} icon='ion-arrow-down-a' />\n          Pull down to refresh\n        </span> :\n        (this.state.pullHookState === 'preaction') ?\n         <span>\n           <Icon size={35} spin={false} icon='ion-arrow-up-a' />\n           Release to refresh\n        </span>\n        :\n        <span><Icon size={35} spin={true} icon='ion-load-d'></Icon> Loading data...</span>\n    }\n      </PullHook>\n    );\n */\nclass PullHook extends BasicComponent {\n  componentDidMount() {\n    super.componentDidMount();\n    var node = ReactDOM.findDOMNode(this);\n    node.addEventListener('changestate', this.props.onChange);\n    CustomElements.upgrade(this.refs.pullHook);\n    this.refs.pullHook.onAction = this.props.onLoad;\n  }\n\n  componentWillUnmount() {\n    var node = ReactDOM.findDOMNode(this);\n    node.removeEventListener('changestate', this.props.onChange);\n  }\n\n  render() {\n    var {...others} = this.props;\n\n    ['disabled'].forEach((el) => {\n      Util.convert(others, el);\n    });\n\n    Util.convert(others, 'height', {fun: Util.sizeConverter});\n    Util.convert(others, 'thresholdHeight', {fun: Util.sizeConverter, newName: 'threshold-height'});\n    Util.convert(others, 'fixedContent', {newName: 'fixed-content'});\n\n    return <ons-pull-hook ref='pullHook' {...others} />;\n  }\n}\n\nPullHook.propTypes = {\n  /**\n   * @name onChange\n   * @type function\n   * @required false\n   * @description\n   *  [en]Called when the pull hook inner state is changed. The state can be either \"initial\", \"preaction\" or \"action\"[/en]\n   *  [jp] [/jp]\n   */\n  onChange: React.PropTypes.func,\n\n  /**\n   * @name onLoad\n   * @type function\n   * @required false\n   * @description\n   *  [en]Called when the pull hook is in the  `action` state[/en]\n   *  [jp] [/jp]\n   */\n  onLoad: React.PropTypes.func,\n\n  /**\n   * @name disabled\n   * @type bool\n   * @description\n   *  [en] When set to true, the pull hook will be disabled.[/en]\n   *  [jp] [/jp]\n   */\n  disabled: React.PropTypes.bool,\n\n  /**\n   * @name height\n   * @type number\n   * @description\n   *  [en] The height of the pull hook in pixels. The default value is 64.[/en]\n   *  [jp] [/jp]\n   */\n  height: React.PropTypes.number,\n\n  /**\n   * @name thresholdHeight\n   * @type number\n   * @description\n   *  [en] The threshold height of the pull hook in pixels. The default value is 96.[/en]\n   *  [jp] [/jp]\n   */\n  thresholdHeight: React.PropTypes.number,\n\n  /**\n   * @name fixedContent\n   * @type number\n   * @description\n   *  [en] If set to true, the content of the page will not move when pulling.[/en]\n   *  [jp] [/jp]\n   */\n  fixedContent: React.PropTypes.bool\n};\n\nexport default PullHook;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst EVENT_TYPES = ['change', 'input'];\n\n/**\n * @original ons-range\n * @category input\n * @tutorial react/Reference/input\n * @description\n * [en]\n *   Range input component.\n * [/en]\n * [jp][/jp]\n * @example\n * <Range modifier=\"material\"\n *   value={this.state.value}\n *   onChange={(event) => this.setState({value: parseInt(event.target.value)})}\n *   />\n */\nclass Range extends SimpleWrapper {\n\n  componentDidMount() {\n    super.componentDidMount();\n    var node = ReactDOM.findDOMNode(this);\n\n    EVENT_TYPES.forEach((eventType) => {\n      node.addEventListener(eventType, this.props.onChange);\n    });\n  }\n\n  componentWillUnmount() {\n    var node = ReactDOM.findDOMNode(this);\n\n    EVENT_TYPES.forEach((eventType) => {\n      node.removeEventListener(eventType, this.props.onChange);\n    });\n  }\n\n  _getDomNodeName() {\n    return 'ons-range';\n  }\n};\n\nRange.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the progress indicator.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name onChange\n   * @type function\n   * @description\n   *  [en] Called when the value of the input changes.[/en]\n   *  [jp][/jp]\n   */\n  onChange: React.PropTypes.func,\n\n  /**\n   * @name value\n   * @type number\n   * @description\n   *  [en]\n   *  Current value of the element.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  value: React.PropTypes.number,\n\n  /**\n   * @name disabled\n   * @type bool\n   * @description\n   *  [en] If true, the element is disabled. [/en]\n   *  [jp] [/jp]\n   */\n  disabled: React.PropTypes.bool\n};\n\nexport default Range;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\n\n/**\n * @original ons-ripple\n * @category ripple\n * @tutorial react/Reference/ripple\n * @description\n * [en]\n *   Adds a Material Design \"ripple\" effect to an element.\n * [/en]\n * [jp][/jp]\n * @example\n   <div className='myList'>\n     <Ripple color='red' />\n   </div>\n */\nclass Ripple extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-ripple';\n  }\n};\n\nRipple.propTypes = {\n  /**\n   * @name color\n   * @type string\n   * @required false\n   * @description\n   *  [en]Color of the ripple effect.[/en]\n   *  [jp] [/jp]\n   */\n  color: React.PropTypes.string,\n\n  /**\n   * @name background\n   * @type string\n   * @required false\n   * @description\n   *  [en]Color of the background.[/en]\n   *  [jp] [/jp]\n   */\n  background: React.PropTypes.string,\n\n  /**\n   * @name disabled\n   * @type bool\n   * @description\n   *  [en]\n   *  Specifies whether the button is disabled.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  disabled: React.PropTypes.bool\n};\n\nexport default Ripple;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\nimport Util from './Util.js';\n\n/**\n * @original ons-row\n * @category grid\n * @description\n * [en]\n * Represents a row in the grid system. Use with `Col` to layout components.\n * [/en]\n * [jp][/jp]\n * <Row>\n *   <Col width={50}>\n  *   <ons-icon icon=\"fa-twitter\"></ons-icon>\n *   </Col>\n *   <Col>Text</Col>\n * </Row>\n */\nclass Row extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-row';\n  }\n\n  render() {\n    var {...others} = this.props;\n\n    Util.convert(others, 'verticalAlign', {newName: 'vertical-align'});\n\n    return React.createElement(this._getDomNodeName(), others, this.props.children);\n  }\n\n};\n\nRow.propTypes = {\n\n  /**\n  * @name verticalAlign\n  * @type {String}\n  * @description\n  *   [en]Short hand attribute for aligning vertically. Valid values are top, bottom, and center.[/en]\n  *   [ja][/ja]\n  */\n  verticalAlign: React.PropTypes.oneOf(['top', 'bottom', 'center'])\n\n};\n\nexport default Row;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\n\n/**\n * @original ons-speed-dial\n * @category speed-dial\n * @tutorial react/Reference/speed-dial\n * @description\n * [en] Element that displays a Material Design Speed Dialog component. It is useful when there are more than one primary action that can be performed in a page.\n *  The Speed dial looks like a `Fab` element but will expand a menu when tapped.\n [/en]\n * [jp][/jp]\n * @example\n * <SpeedDial disabled={false} direction='right' onClick={() => console.log('test1')} position='left bottom'>\n     <Fab>\n       <Icon icon='fa-twitter' size={26} fixedWidth={false} style={{verticalAlign: 'middle'}} />\n     </Fab>\n     <SpeedDialItem onClick={() => console.log('speed A')}> A </SpeedDialItem>\n     <SpeedDialItem onClick={() => console.log('speed B')}> B </SpeedDialItem>\n     <SpeedDialItem onClick={() => console.log('speed C')}> C </SpeedDialItem>\n     <SpeedDialItem onClick={() => console.log('speed D')}> D </SpeedDialItem>\n   </SpeedDial>\n */\nclass SpeedDial extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-speed-dial';\n  }\n};\n\nSpeedDial.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the speed dial.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name position\n   * @type string\n   * @description\n   *  [en]Specify the vertical and horizontal position of the component.\n   *     I.e. to display it in the top right corner specify \"right top\".\n   *     Choose from \"right\", \"left\", \"top\" and \"bottom\".\n[/en]\n   *  [jp] [/jp]\n   */\n  position: React.PropTypes.string,\n\n  /**\n   * @name direction\n   * @type string\n   * @description\n   *  [en]Specify the direction the items are displayed. Possible values are \"up\", \"down\", \"left\" and \"right\".[/en]\n   *  [jp] [/jp]\n   */\n  direction: React.PropTypes.oneOf(['up', 'down', 'left', 'right']),\n\n  /**\n   * @name disabled\n   * @type string\n   * @description\n   *  [en]Specify if button should be disabled.[/en]\n   *  [jp] [/jp]\n   */\n  disabled: React.PropTypes.bool\n};\n\nexport default SpeedDial;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\n/**\n * @original ons-speed-dial-item\n * @category speed-dial\n * @tutorial react/Reference/speed-dial\n * @description\n * [en] This component displays the child elements of the Material Design Speed dial component. [/en]\n * [jp][/jp]\n * @example\n * <SpeedDial disabled={false} direction='right' onClick={() => console.log('test1')} position='left bottom'>\n     <Fab>\n       <Icon icon='fa-twitter' size={26} fixedWidth={false} style={{verticalAlign: 'middle'}} />\n     </Fab>\n     <SpeedDialItem onClick={() => console.log('speed A')}> A </SpeedDialItem>\n     <SpeedDialItem onClick={() => console.log('speed B')}> B </SpeedDialItem>\n     <SpeedDialItem onClick={() => console.log('speed C')}> C </SpeedDialItem>\n     <SpeedDialItem onClick={() => console.log('speed D')}> D </SpeedDialItem>\n   </SpeedDial>\n */\nclass SpeedDialItem extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-speed-dial-item';\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    var node = ReactDOM.findDOMNode(this);\n    CustomElements.upgrade(node);\n    node.addEventListener('click', this.props.onClick);\n  }\n\n  componentWillUnmount() {\n    var node = ReactDOM.findDOMNode(this);\n    node.removeEventListener('click', this.props.onClick);\n  }\n};\n\nSpeedDialItem.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the button.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name onClick\n   * @type function\n   * @description\n   *  [en] This function will be called ones the button is clicked. [/en]\n   *  [jp] [/jp]\n   */\n  onClick: React.PropTypes.func\n};\n\nexport default SpeedDialItem;\n","import SimpleWrapper from './SimpleWrapper.jsx';\n\n/**\n * @original ons-splitter\n * @category splitter\n * @tutorial react/Reference/splitter\n * @description\n * [en]  A component that enables responsive layout by implementing both a two-column layout and a sliding menu layout.\n *\n *    It can be configured to automatically expand into a column layout on large screens and collapse the menu on smaller screens. When the menu is collapsed the user can open it by swiping.\n [/en]\n * [jp] どうしよう[/jp]\n * @example\n  <Splitter>\n    <SplitterSide\n      side=\"left\"\n      width={200}\n      isSwipeable={true}>\n      <Page> Page Left </Page>\n    </SplitterSide>\n    <SplitterContent>\n      <Page> Page Content </Page>\n    </SplitterContent>\n    <SplitterSide\n      side=\"right\"\n      width={300}\n      isCollapsed={!this.state.showRight}\n      isOpen={this.state.openRight}\n      onClose={this.handleRightClose.bind(this)}\n      onOpen={this.handleRightOpen.bind(this)}\n      isSwipeable={true}>\n      <Page> Page Right </Page>\n    </SplitterSide>\n  </Splitter>\n        */\n\nclass Splitter extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-splitter';\n  }\n};\n\nexport default Splitter;\n","import SimpleWrapper from './SimpleWrapper.jsx';\n/**\n * @original ons-splitter-content\n * @category splitter\n * @tutorial react/Reference/splitter\n * @description\n * [en]  The SplitterContent  element is used as a child element of Splitter.\n *    It contains the main content of the page while SplitterSide contains the list.\n [/en]\n * [jp][/jp]\n * @example\n  <Splitter>\n    <SplitterSide\n      side=\"left\"\n      width={200}\n      isSwipeable={true}>\n      <Page> Page Left </Page>\n    </SplitterSide>\n    <SplitterContent>\n      <Page> Page Content </Page>\n    </SplitterContent>\n    <SplitterSide\n      side=\"right\"\n      width={300}\n      isCollapsed={!this.state.showRight}\n      isOpen={this.state.openRight}\n      onClose={this.handleRightClose.bind(this)}\n      onOpen={this.handleRightOpen.bind(this)}\n      isSwipeable={true}>\n      <Page> Page Right </Page>\n    </SplitterSide>\n  </Splitter>\n */\nclass SplitterContent extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-splitter-content';\n  }\n};\n\nexport default SplitterContent;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BasicComponent from './BasicComponent.jsx';\nimport Util from './Util.js';\n\n/**\n * @original ons-splitter-side\n * @category splitter\n * @tutorial react/Reference/splitter\n * @description\n * [en]  The SplitterContent  element is used as a child element of Splitter.\n *    It contains the main content of the page while SplitterSide contains the list.\n [/en]\n * [jp][/jp]\n * @example\n  <Splitter>\n    <SplitterSide\n      side=\"left\"\n      width={200}\n      isSwipeable={true}>\n      <Page> Page Left </Page>\n    </SplitterSide>\n    <SplitterContent>\n      <Page> Page Content </Page>\n    </SplitterContent>\n    <SplitterSide\n      side=\"right\"\n      width={300}\n      isCollapsed={!this.state.showRight}\n      isOpen={this.state.openRight}\n      onClose={this.handleRightClose.bind(this)}\n      onOpen={this.handleRightOpen.bind(this)}\n      isSwipeable={true}>\n      <Page> Page Right </Page>\n    </SplitterSide>\n  </Splitter>\n */\n\nclass SplitterSide extends BasicComponent {\n  render() {\n    var {...props} = this.props;\n\n    props.collapse = this.props.isCollapsed ? 'collapse' : 'false';\n    props.swipeable = this.props.isSwipeable ? 'swipeable' : 'false';\n\n    Util.convert(props, 'width', {fun: Util.sizeConverter});\n    Util.convert(props, 'animation');\n    Util.convert(props, 'side');\n    Util.convert(props, 'mode');\n    Util.convert(props, 'animationOptions', {fun: Util.animationOptionsConverter, newName: 'animation-options'});\n    Util.convert(props, 'openThreshold', {newName: 'open-threshold'});\n    Util.convert(props, 'swipeTargetWidth', {fun: Util.sizeConverter, newName: 'swipe-target-width'});\n\n    return (\n      <ons-splitter-side {...props} >\n        {this.props.children}\n      </ons-splitter-side>\n    );\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    this.node = ReactDOM.findDOMNode(this);\n\n    this.node.addEventListener('postopen', this.props.onOpen);\n    this.node.addEventListener('postclose', this.props.onClose);\n    this.node.addEventListener('preopen', this.props.onPreOpen);\n    this.node.addEventListener('preclose', this.props.onPreClose);\n    this.node.addEventListener('modechange', this.props.onModeChange);\n  }\n\n  componentWillUnmount() {\n    this.node.removeEventListener('postopen', this.props.onOpen);\n    this.node.removeEventListener('postclose', this.props.onClose);\n    this.node.removeEventListener('preopen', this.props.onPreOpen);\n    this.node.removeEventListener('preclose', this.props.onPreClose);\n    this.node.removeEventListener('modechange', this.props.onModeChange);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.isOpen) {\n      this.node.open();\n    } else {\n      this.node.close();\n    }\n  }\n}\n\nSplitterSide.propTypes = {\n  /**\n   * @name isCollapsed\n   * @type bool\n   * @description\n   *  [en]The appearance of the button.[/en]\n   *  [jp] [/jp]\n   */\n  isCollapsed: React.PropTypes.bool.isRequired,\n\n  /**\n   * @name isSwipable\n   * @type bool\n   * @description\n   *  [en]Ennable swipe interaction on collapse mode.[/en]\n   *  [jp] [/jp]\n   */\n  isSwipable: React.PropTypes.bool,\n\n  /**\n   * @name isOpen\n   * @type bool\n   * @description\n   *  [en]Specifies whether the menu is open.[/en]\n   *  [jp] [/jp]\n   */\n  isOpen: React.PropTypes.bool,\n\n  /**\n   * @name onOpen\n   * @type function\n   * @description\n   *  [en]Called after the menu is opened.[/en]\n   *  [jp] [/jp]\n   */\n  onOpen: React.PropTypes.func,\n\n  /**\n   * @name onClose\n   * @type function\n   * @description\n   *  [en]Called after the menu is closed.[/en]\n   *  [jp] [/jp]\n   */\n  onClose: React.PropTypes.func,\n\n  /**\n   * @name side\n   * @type string\n   * @description\n   *  [en]Specify which side of the screen the SplitterSide element is located. Possible values are `\"left\"` and `\"right\"`.[/en]\n   *  [jp] [/jp]\n   */\n  side: React.PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * @name swipeTargetWidth\n   * @type number\n   * @description\n   *  [en]Specifies the width of the menu with a number (for pixels) or a string (e.g. \"20%\" for percentage).[/en]\n   *  [jp] [/jp]\n   */\n  swipeTargetWidth: React.PropTypes.number,\n\n  /**\n   * @name width\n   * @type  numebr\n   * @description\n   *  [en]Specifies the width of the menu with a number (for pixels) or a string (e.g. \"20%\" for percentage).[/en]\n   *  [jp] [/jp]\n   */\n  width: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.string]),\n\n  /**\n   * @name animation\n   * @type string\n   * @required false\n   * @description\n   *  [en]Specify the animation. Use one of `\"overlay\"`, and `\"default\"`.[/en]\n   *  [jp] [/jp]\n   */\n  animation: React.PropTypes.string,\n\n  /**\n   * @name animationOptions\n   * @type object\n   * @required false\n   * @description\n   *  [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n   *  [jp] [/jp]\n   */\n  animationOptions: React.PropTypes.object,\n\n  /**\n   * @name openThreshold\n   * @type object\n   * @required false\n   * @description\n   *  [en] Specify how much the menu needs to be swiped before opening. A value between `0` and `1`.  [/en]\n   *  [jp] [/jp]\n   */\n  openThreshold: React.PropTypes.number,\n\n  /**\n   * @name mode\n   * @type string\n   * @required false\n   * @description\n   *  [en] Current mode. Possible values are `\"collapse\"` or `\"split\"`. This attribute is read only.  [/en]\n   *  [jp] [/jp]\n   */\n  mode: React.PropTypes.oneOf(['collapse', 'split']),\n\n  /**\n   * @name onPreOpen\n   * @type string\n   * @description\n   *  [en] Called before the menu opens.  [/en]\n   *  [jp] [/jp]\n   */\n  onPreOpen: React.PropTypes.func,\n\n  /**\n   * @name onPreClose\n   * @type string\n   * @description\n   *  [en] Called before the menu closes.  [/en]\n   *  [jp] [/jp]\n   */\n  onPreClose: React.PropTypes.func,\n\n  /**\n   * @name onModeChange\n   * @type string\n   * @description\n   *  [en] Called after the component's mode changes. [/en]\n   *  [jp] [/jp]\n   */\n  onModeChange: React.PropTypes.func\n};\n\nexport default SplitterSide;\n","import React from 'react';\nimport BasicComponent from './BasicComponent.jsx';\n\n/**\n * @original ons-switch\n * @category input\n * @tutorial react/Reference/input\n * @description\n * [en]   Switch component. The switch can be toggled both by dragging and tapping.\n *     Will automatically displays a Material Design switch on Android devices.\n [/en]\n * [jp][/jp]\n * @example\n * <Switch checked={this.state.checked} onChange={this.onChange} />\n */\nclass Switch extends BasicComponent {\n\n  componentDidMount() {\n    super.componentDidMount();\n    this.refs.switch.addEventListener('change', this.props.onChange);\n  }\n\n  componentWillUnmount() {\n    this.refs.switch.removeEventListener('change', this.props.onChange);\n  }\n\n  render() {\n    var {checked, inputId, ...other} = this.props;\n\n    if (inputId) {\n      other['input-id'] = inputId;\n    }\n    return (\n      <ons-switch ref='switch' checked={checked ? '' : null} {...other} />\n    );\n  }\n};\n\nSwitch.propTypes = {\n    /**\n   * @name onChange\n   * @type function\n   * @description\n   *  [en] Called when the value of the switch changes (checked/unchecked) [/en]\n   *  [jp] [/jp]\n   */\n  onChange: React.PropTypes.func,\n\n  /**\n   * @name checked\n   * @type bool\n   * @description\n   *  [en] Whether the switch is checked.[/en]\n   *  [jp] [/jp]\n   */\n  checked: React.PropTypes.bool,\n\n  /**\n   * @name disabled\n   * @type bool\n   * @description\n   *  [en] If set, the switch is disabled.[/en]\n   *  [jp] [/jp]\n   */\n  disabled: React.PropTypes.bool,\n\n  /**\n   * @name inputId\n   * @type bool\n   * @description\n   *  [en] Specify the `id` attribute of the inner `<input>` element. This is useful when using `<label for=\"...\">` elements.[/en]\n   *  [jp] [/jp]\n   */\n  inputId: React.PropTypes.string\n};\n\nexport default Switch;\n","import SimpleWrapper from './SimpleWrapper.jsx';\n\n/**\n * @original ons-tab\n * @category tabbar\n * @tutorial react/Reference/tabbar\n * @description\n * [en] Represents a tab inside tab bar.\n [/en]\n * [jp][/jp]\n * @example\n * <Tap>\n *   Home\n * </Tap>\n */\nclass Tab extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-tab';\n  }\n};\n\nexport default Tab;\n","import SimpleWrapper from './SimpleWrapper.jsx';\n\n/**\n * @original ons-tab-active\n * @category tabbar\n * @tutorial react/Reference/tabbar\n * @description\n * [en] Tab element for showing shown when the tab is active [/en]\n * [jp][/jp]\n * @example\n * <Tab>\n *   <TabActive>\n       HOME\n     </TabInActive>\n     <TabInActive>\n       home\n     </TabInActive>\n   </Tab>\n */\nclass TabActive extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-tab-active';\n  }\n};\n\nexport default TabActive;\n","import SimpleWrapper from './SimpleWrapper.jsx';\n\n/**\n * @original ons-tab-inactive\n * @category tabbar\n * @tutorial react/Reference/tabbar\n * @description\n * [en] Tab element for showing shown when the tab is inactive [/en]\n * [jp][/jp]\n * @example\n * <Tab>\n *   <TabActive>\n       HOME\n     </TabInactive>\n     <TabInactive>\n       home\n     </TabInactive>\n   </Tab>\n */\nclass TabInactive extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-tab-inactive';\n  }\n};\n\nexport default TabInactive;\n","import React from 'react';\nimport BasicComponent from './BasicComponent.jsx';\nimport Util from './Util.js';\n\n/**\n * @original ons-tabbar\n * @category tabbar\n * @tutorial react/Reference/tabbar\n * @description\n * [en] Component to display a tabbar on either the top or the bottom of a page.\n * To define the tabs and the content the property renderTabs need to be implemented, that returns an array of tabs and their content. See the example for specifics. [/en]* [jp][/jp]\n * @example\n\n  <Page>\n    <Tabbar\n      onPreChange={() => console.log('preChange')}\n      onPostChange={() => console.log('postChange')}\n      onReactive={() => console.log('postChange')}\n      position='bottom'\n      renderTabs={(activeIndex, tabbar) => [\n        {\n          content: <TabPage title=\"Home\" active={activeIndex === 0} tabbar={tabbar} />,\n          tab: <Tab label=\"Home\" icon=\"md-home\" />\n        },\n        {\n          content: <TabPage title=\"Settings\" active={activeIndex === 1} tabbar={tabbar} />,\n          tab: <Tab label=\"Settings\" icon=\"md-settings\" />\n        }]\n      }\n    />\n  </Page>\n */\n\nclass Tabbar extends BasicComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: props.initialIndex || 0\n    };\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    const node = this.refs.tabbar;\n    CustomElements.upgrade(node);\n    node.addEventListener('prechange', this.handleChange.bind(this));\n    node.addEventListener('prechange', this.props.onPreChange);\n    node.addEventListener('postchange', this.props.onPostChange);\n    node.addEventListener('reactive', this.props.onReactive);\n  }\n\n  componentWillUnmount() {\n    const node = this.refs.tabbar;\n    node.removeEventListener('prechange', this.handleChange);\n    node.removeEventListener('prechange', this.props.onPreChange);\n    node.removeEventListener('postchange', this.props.onPostChange);\n    node.removeEventListener('reactive', this.props.onReactive);\n  }\n\n  handleChange(event) {\n    this.setState({activeIndex: event.index});\n  }\n\n  /**\n   * @method setActiveTab\n   * @signature setActiveTab(index, options)\n   * @param {Number} index\n   *   [en]Tab index.[/en]\n   *   [ja]タブのインデックスを指定します。[/ja]\n   * @param {Object} [options]\n   *   [en]Parameter object.[/en]\n   *   [ja]オプションを指定するオブジェクト。[/ja]\n   * @param {Boolean} [options.keepPage]\n   *   [en]If true the page will not be changed.[/en]\n   *   [ja]タブバーが現在表示しているpageを変えない場合にはtrueを指定します。[/ja]\n   * @param {String} [options.animation]\n   *   [en]Animation name. Available animations are `\"fade\"`, `\"slide\"` and `\"none\"`.[/en]\n   *   [ja]アニメーション名を指定します。`\"fade\"`、`\"slide\"`、`\"none\"`のいずれかを指定できます。[/ja]\n   * @description\n   *   [en]Show specified tab page. Animations and other options can be specified by the second parameter.[/en]\n   *   [ja]指定したインデックスのタブを表示します。アニメーションなどのオプションを指定できます。[/ja]\n   * @return {Promise}\n   *   [en]Resolves to the new page element.[/en]\n   *   [ja][/ja]\n   */\n  setActiveTab(index, options) {\n    this.refs.tabbar.setActiveTab(index, options);\n  }\n\n  /**\n   * @method getActiveTabIndex\n   * @signature getActiveTabIndex()\n   * @return {Number}\n   *   [en]The index of the currently active tab.[/en]\n   *   [ja]現在アクティブになっているタブのインデックスを返します。[/ja]\n   * @description\n   *   [en]Returns tab index on current active tab. If active tab is not found, returns -1.[/en]\n   *   [ja]現在アクティブになっているタブのインデックスを返します。現在アクティブなタブがない場合には-1を返します。[/ja]\n   */\n  getActiveTabIndex() {\n    return this.refs.tabbar.getActiveTabIndex();\n  }\n\n  render() {\n    const tabs = this.props.renderTabs(this.state.activeIndex, this);\n\n    var {...others} = this.props;\n\n    ['animation'].forEach((el) => {\n      Util.convert(others, el);\n    });\n\n    Util.convert(others, 'animationOptions', {fun: Util.animationOptionsConverter, newName: 'animation-options'});\n\n    return (\n      <ons-tabbar {...this.props} ref='tabbar' activeIndex={this.state.activeIndex} _compiled='true'>\n        <div no-status-bar-fill className={'ons-tab-bar__content tab-bar__content' + (this.props.position === 'top' ? ' tab-bar--top__content' : '')}>\n          {tabs.map((tab) => tab.content)}\n        </div>\n        <div className={'tab-bar ons-tab-bar__footer ons-tabbar-inner' + (this.props.position === 'top' ? ' tab-bar--top' : '')}>\n          {tabs.map((tab) => tab.tab)}\n        </div>\n      </ons-tabbar>\n    );\n  }\n};\n\nTabbar.propTypes = {\n  /**\n   * @name initialIndex\n   * @type number\n   * @description\n   *  [en] The index of the first tab to show.[/en]\n   *  [jp] [/jp]\n   */\n  initialIndex: React.PropTypes.number,\n\n  /**\n   * @name renderTabs\n   * @type function\n   * @description\n   *  [en] The index of the first tab to show.[/en]\n   *  [jp] [/jp]\n   */\n  renderTabs: React.PropTypes.func.isRequired,\n\n  /**\n   * @name position\n   * @type string\n   * @description\n   *  [en] Tabbar's position. Available values are `\"bottom\"` and `\"top\"`. Use `\"auto\"` to choose position depending on platform (iOS bottom, Android top). [/en]\n   *  [jp] [/jp]\n   */\n  position: React.PropTypes.string,\n\n  /**\n   * @name animation\n   * @type string\n   * @description\n   *  [en] Animation name. Available values are `\"none\"`, `\"slide\"` and `\"fade\"`. Default is `\"none\"`. [/en]\n   *  [jp] [/jp]\n   */\n  animation: React.PropTypes.oneOf(['none', 'slide', 'fade']),\n\n  /**\n   * @name animationOptions\n   * @type object\n   * @required false\n   * @description\n   *  [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n   *  [jp] [/jp]\n   */\n  animationOptions: React.PropTypes.object,\n\n  /**\n   * @name onPreChagne\n   * @type function\n   * @description\n   *  [en]Called just before the tab is changed.[/en]\n   *  [jp] [/jp]\n   */\n  onPreChange: React.PropTypes.func,\n\n  /**\n   * @name onPostChange\n   * @type function\n   * @description\n   *  [en]Called just after the tab is changed.[/en]\n   *  [jp] [/jp]\n   */\n  onPostChange: React.PropTypes.func,\n\n  /**\n   * @name onPostChange\n   * @type function\n   * @description\n   *  [en]Called if the already open tab is tapped again.[/en]\n   *  [jp] [/jp]\n   */\n  onReactive: React.PropTypes.func\n};\n\nTabbar.defaultProps = {\n  initialIndex: 0\n};\n\nexport default Tabbar;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\n\n/**\n * @original ons-toolbar\n * @category toolbar\n * @tutorial react/Reference/toolbar\n * @description\n * [en]  Toolbar component that can be used with navigation. Left, center and right container can be specified by class names.  This component will automatically displays as a Material Design toolbar when running on Android devices.\n * [jp] どうしよう[/jp]\n * @example\n *\n<Page renderToolbar={() =>\n   <Toolbar>\n     <div className=\"left\">\n       <BackButton>\n         Back\n       </BackButton>\n     </div>\n     <div className=\"center\">\n       Title\n     </div>\n     <div className=\"right\">\n       <ToolbarButton>\n         <Icon icon=\"md-menu\" />\n       </ToolbarButton>\n     </div>\n   </Toolbar> } />\n */\nclass Toolbar extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-toolbar';\n  }\n};\n\nToolbar.propTypes = {\n  /**\n   * @name modifier\n   * @type string\n   * @description\n   *  [en]\n   *  Specify modifier name to specify custom styles. Optional.\n   *  [/en]\n   *  [jp] どうしよう[/jp]\n   */\n  modifier: React.PropTypes.string\n};\n\nexport default Toolbar;\n","import SimpleWrapper from './SimpleWrapper.jsx';\nimport React from 'react';\n\n/**\n * @original ons-toolbar-button\n * @category toolbar\n * @tutorial react/Reference/toolbar\n * @description\n *   [en]\n *   Button component for the Toolbar. Using this component gives a nice default style.\n *\n *\n *   [/en]\n * [jp][/jp]\n * @example\n * <Page\n     renderToolbar = { () =>\n      <Toolbar>\n        <div className='left'><BackButton>Back</BackButton></div>\n        <div className='center'>Input</div>\n        <div className='right'>\n          <ToolbarButton onClick={this.add} >Add</ToolbarButton>\n        </div>\n      </Toolbar>\n     }>\n      Page Content\n    </Page>\n */\nclass ToolbarButton extends SimpleWrapper {\n  _getDomNodeName() {\n    return 'ons-toolbar-button';\n  }\n};\n\nToolbarButton.propTypes = {\n    /**\n   * @name modifier\n   * @type string\n   * @required false\n   * @description\n   *  [en]The appearance of the button.[/en]\n   *  [jp] [/jp]\n   */\n  modifier: React.PropTypes.string,\n\n  /**\n   * @name disabled\n   * @type bool\n   * @description\n   *  [en]\n   *  Indicates whether the button is disabled.\n   *  [/en]\n   *  [jp] [/jp]\n   */\n  disabled: React.PropTypes.bool\n};\n\nexport default ToolbarButton;\n"],"names":["EVENT_TYPES"],"mappings":"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"}